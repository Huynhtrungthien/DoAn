@model DoAn.Models.SanPham

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Chỉnh sửa thông tin sản phẩm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.masp)

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập mã loại</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.maloai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.maloai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập tên sản phẩm</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.tensp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tensp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Chọn hình</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.hinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hinh, "", new { @class = "text-danger" })
                <input type="file" name="fileUpload" id="fileUpload" accept="image/*" style="display:none;" />
                <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
                <img src="@Model.hinh" id="pictureUpload" width="300" />
            </div>
        </div>

@section upload
{
            <script>
            $(function () {
                $('#btnUpload').click(function () {
                    $('#fileUpload').trigger('click');
                });
            });
            $('#fileUpload').change(function () {
                if (window.FormData !== undefined) {
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    var formData = new FormData();
                    formData.append('file', files[0]);
                    $.ajax(
                        {
                            type: 'POST',
                            url: '/SanPham/ProcessUpload',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {
                                $('#pictureUpload').attr('src', urlImage);
                                $('#hinh').val(urlImage);
                            },
                            error: function (err) {
                                alert('Error ', err.statusText);
                            }
                        });
                }
            });
            </script>
}





        <div class="form-group">
            <strong class="control-label col-md-2">Nhập giá</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.gia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập số lượng tồn</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.soluongton, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.soluongton, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">CPU</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập dung lượng bộ nhớ</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ROM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ROM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập RAM</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập PIN</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Nhập hệ điều hành</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HDH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HDH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Thẻ nhớ</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.thenho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.thenho, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Camera trước</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cameratruoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cameratruoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Camera sau</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.camerasau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.camerasau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Thời gian bảo hành</strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ngaybaohanh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ngaybaohanh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListSPham")
</div>
